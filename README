# chatApp

## Description

A chat app for mobile devices using React Native. The app provides users with a chat interface and options to share images, audios and location.

# Install Dependencies:

- **React Native**: Framework for building mobile applications using JavaScript and React.
- **Expo**: Development platform for building React Native applications.
- **GiftedChat**: A library for creating chat interfaces in React Native applications.
- **Google Firebase**: Cloud-based platform that provides various services, including Firestore for real-time database and authentication.
- **AsyncStorage**: Local storage system in React Native for caching and persisting data.
- **Expo ImagePicker**: Expo API for accessing the device's image picker to choose images from the gallery.
- **Expo MediaLibrary**: Expo API for accessing and managing media assets on the device.
- **Expo Location**: Expo API for obtaining location information from a device.
- **react-native-maps**: React Native Map components for iOS + Android.
- **MapView**: Specific component from the react-native-maps library used to display maps in React Native applications.

## Features

- Users can enter their name and choose a background color for the chat screen before joining the chat
- Send and receive messages
- Send and receive images (from media library or device's camera)
- Send and receive locations
- Record, send and receive audio
- Users can view previous messages when offline

### Technical Requirements

- The app must be written in React Native.
- The app must be developed using Expo.
- The app must be styled according to the given screen design.
- Chat conversations must be stored in Google Firestore Database.
- The app must authenticate users anonymously via Google Firebase authentication.
- Chat conversations must be stored locally.
- The app must let users pick and send images from the phone’s image library.
- The app must let users take pictures with the device’s camera app, and send them.
- The app must store images in Firebase Cloud Storage.
- The app must be able to read the user’s location data.
- Location data must be sent via the chat in a map view.
- The chat interface and functionality must be created using the Gifted Chat library.
- The app’s codebase must contain comments.
